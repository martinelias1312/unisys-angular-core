import { Injectable, Component, Input, defineInjectable, NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { HttpClient } from '@angular/common/http';
import { TranslateLoader, TranslateModule } from '@ngx-translate/core';
import { TranslateHttpLoader } from '@ngx-translate/http-loader';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UnisysAngularInputWrapperService = /** @class */ (function () {
    function UnisysAngularInputWrapperService() {
    }
    UnisysAngularInputWrapperService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] },
    ];
    /** @nocollapse */
    UnisysAngularInputWrapperService.ctorParameters = function () { return []; };
    /** @nocollapse */ UnisysAngularInputWrapperService.ngInjectableDef = defineInjectable({ factory: function UnisysAngularInputWrapperService_Factory() { return new UnisysAngularInputWrapperService(); }, token: UnisysAngularInputWrapperService, providedIn: "root" });
    return UnisysAngularInputWrapperService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var UnisysAngularInputWrapperComponent = /** @class */ (function () {
    function UnisysAngularInputWrapperComponent() {
        this.customClass = '';
        this.fieldName = '';
    }
    /**
     * @return {?}
     */
    UnisysAngularInputWrapperComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.fieldName != '' ? this.field = this.group.controls[this.fieldName] : this.field = null;
    };
    /**
     * @param {?} val
     * @return {?}
     */
    UnisysAngularInputWrapperComponent.prototype.isString = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        return typeof val === 'string';
    };
    UnisysAngularInputWrapperComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-unisys-angular-input-wrapper',
                    template: "<div class=\"form-group\" [formGroup]=\"group\" [ngClass]=\"customClass != '' && customClass\">\n    <label class=\"center-block\"> <span translate>{{ translation}}</span>\n        <ng-content></ng-content>\n    </label>\n    <ul *ngIf=\"fieldName\">\n        <li *ngFor=\"let item of field.errors | keyvalue\">\n            <span class=\"text-red\" style=\"font-size: 11px;font-weight: 700;\" translate>{{ item.key}}</span> <span *ngIf=\"isString(item.value)\" translate> {{ item.value}}</span>\n            <span *ngIf=\"!isString(item.value)\">\n          <ul>\n            <li *ngFor=\"let subitem of item.value | keyvalue\">\n              <span translate>{{ subitem.key}}</span> : {{ subitem.value}}\n            </li>\n          </ul>\n        </span>\n        </li>\n    </ul>\n</div>",
                    styles: ["label>span{font-weight:500;font-size:12px}.form-control.ng-invalid{border-color:#dd4b39}.form-control.ng-valid{border-color:#c3dccd}ul{padding-left:0;list-style:none}ul li ul{padding-left:5px}.error{font-size:11px;font-weight:700}"]
                },] },
    ];
    /** @nocollapse */
    UnisysAngularInputWrapperComponent.ctorParameters = function () { return []; };
    UnisysAngularInputWrapperComponent.propDecorators = {
        translation: [{ type: Input, args: ['translation',] }],
        group: [{ type: Input, args: ['group',] }],
        customClass: [{ type: Input, args: ['customClass',] }],
        fieldName: [{ type: Input, args: ['fieldName',] }]
    };
    return UnisysAngularInputWrapperComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @param {?} http
 * @return {?}
 */
function HttpLoaderFactory(http) {
    return new TranslateHttpLoader(http, './assets/i18n/', '.json');
}
var UnisysAngularInputWrapperModule = /** @class */ (function () {
    function UnisysAngularInputWrapperModule() {
    }
    UnisysAngularInputWrapperModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        ReactiveFormsModule,
                        TranslateModule.forRoot({
                            loader: {
                                provide: TranslateLoader,
                                useFactory: HttpLoaderFactory,
                                deps: [HttpClient]
                            }
                        }),
                    ],
                    declarations: [UnisysAngularInputWrapperComponent],
                    exports: [UnisysAngularInputWrapperComponent]
                },] },
    ];
    return UnisysAngularInputWrapperModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { UnisysAngularInputWrapperService, UnisysAngularInputWrapperComponent, HttpLoaderFactory, UnisysAngularInputWrapperModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2VhcmV1bml0ZS11bmlzeXMtYW5ndWxhci1pbnB1dC13cmFwcGVyLmpzLm1hcCIsInNvdXJjZXMiOlsibmc6Ly9Ad2VhcmV1bml0ZS91bmlzeXMtYW5ndWxhci1pbnB1dC13cmFwcGVyL2xpYi91bmlzeXMtYW5ndWxhci1pbnB1dC13cmFwcGVyLnNlcnZpY2UudHMiLCJuZzovL0B3ZWFyZXVuaXRlL3VuaXN5cy1hbmd1bGFyLWlucHV0LXdyYXBwZXIvbGliL3VuaXN5cy1hbmd1bGFyLWlucHV0LXdyYXBwZXIuY29tcG9uZW50LnRzIiwibmc6Ly9Ad2VhcmV1bml0ZS91bmlzeXMtYW5ndWxhci1pbnB1dC13cmFwcGVyL2xpYi91bmlzeXMtYW5ndWxhci1pbnB1dC13cmFwcGVyLm1vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFVuaXN5c0FuZ3VsYXJJbnB1dFdyYXBwZXJTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxufVxuIiwiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLXVuaXN5cy1hbmd1bGFyLWlucHV0LXdyYXBwZXInLFxuICB0ZW1wbGF0ZTogYDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCIgW2Zvcm1Hcm91cF09XCJncm91cFwiIFtuZ0NsYXNzXT1cImN1c3RvbUNsYXNzICE9ICcnICYmIGN1c3RvbUNsYXNzXCI+XG4gICAgPGxhYmVsIGNsYXNzPVwiY2VudGVyLWJsb2NrXCI+IDxzcGFuIHRyYW5zbGF0ZT57eyB0cmFuc2xhdGlvbn19PC9zcGFuPlxuICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgPC9sYWJlbD5cbiAgICA8dWwgKm5nSWY9XCJmaWVsZE5hbWVcIj5cbiAgICAgICAgPGxpICpuZ0Zvcj1cImxldCBpdGVtIG9mIGZpZWxkLmVycm9ycyB8IGtleXZhbHVlXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtcmVkXCIgc3R5bGU9XCJmb250LXNpemU6IDExcHg7Zm9udC13ZWlnaHQ6IDcwMDtcIiB0cmFuc2xhdGU+e3sgaXRlbS5rZXl9fTwvc3Bhbj4gPHNwYW4gKm5nSWY9XCJpc1N0cmluZyhpdGVtLnZhbHVlKVwiIHRyYW5zbGF0ZT4ge3sgaXRlbS52YWx1ZX19PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gKm5nSWY9XCIhaXNTdHJpbmcoaXRlbS52YWx1ZSlcIj5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgKm5nRm9yPVwibGV0IHN1Yml0ZW0gb2YgaXRlbS52YWx1ZSB8IGtleXZhbHVlXCI+XG4gICAgICAgICAgICAgIDxzcGFuIHRyYW5zbGF0ZT57eyBzdWJpdGVtLmtleX19PC9zcGFuPiA6IHt7IHN1Yml0ZW0udmFsdWV9fVxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICA8L3VsPlxuICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvbGk+XG4gICAgPC91bD5cbjwvZGl2PmAsXG4gIHN0eWxlczogW2BsYWJlbD5zcGFue2ZvbnQtd2VpZ2h0OjUwMDtmb250LXNpemU6MTJweH0uZm9ybS1jb250cm9sLm5nLWludmFsaWR7Ym9yZGVyLWNvbG9yOiNkZDRiMzl9LmZvcm0tY29udHJvbC5uZy12YWxpZHtib3JkZXItY29sb3I6I2MzZGNjZH11bHtwYWRkaW5nLWxlZnQ6MDtsaXN0LXN0eWxlOm5vbmV9dWwgbGkgdWx7cGFkZGluZy1sZWZ0OjVweH0uZXJyb3J7Zm9udC1zaXplOjExcHg7Zm9udC13ZWlnaHQ6NzAwfWBdXG59KVxuZXhwb3J0IGNsYXNzIFVuaXN5c0FuZ3VsYXJJbnB1dFdyYXBwZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoJ3RyYW5zbGF0aW9uJykgdHJhbnNsYXRpb247XG4gIEBJbnB1dCgnZ3JvdXAnKSBncm91cDogRm9ybUdyb3VwO1xuICBASW5wdXQoJ2N1c3RvbUNsYXNzJykgY3VzdG9tQ2xhc3M6IHN0cmluZyA9ICcnO1xuICBASW5wdXQoJ2ZpZWxkTmFtZScpIGZpZWxkTmFtZTogc3RyaW5nID0gJyc7XG5cbiAgcHVibGljIGZpZWxkO1xuXG4gIGNvbnN0cnVjdG9yKCl7XG4gIH1cblxuICBuZ09uSW5pdCgpe1xuICAgIHRoaXMuZmllbGROYW1lICE9ICcnID8gdGhpcy5maWVsZCA9IHRoaXMuZ3JvdXAuY29udHJvbHNbdGhpcy5maWVsZE5hbWVdIDogdGhpcy5maWVsZCA9IG51bGwgO1xuICB9XG5cbiAgcHVibGljIGlzU3RyaW5nKHZhbCl7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnO1xuICB9XG5cbn1cbiIsImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb21tb25cIjtcbmltcG9ydCB7IEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVW5pc3lzQW5ndWxhcklucHV0V3JhcHBlckNvbXBvbmVudCB9IGZyb20gJy4vdW5pc3lzLWFuZ3VsYXItaW5wdXQtd3JhcHBlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gXCJAYW5ndWxhci9jb21tb24vaHR0cFwiO1xuaW1wb3J0IHsgVHJhbnNsYXRlTG9hZGVyLCBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tIFwiQG5neC10cmFuc2xhdGUvY29yZVwiO1xuaW1wb3J0IHsgVHJhbnNsYXRlSHR0cExvYWRlciB9IGZyb20gXCJAbmd4LXRyYW5zbGF0ZS9odHRwLWxvYWRlclwiO1xuXG5leHBvcnQgZnVuY3Rpb24gSHR0cExvYWRlckZhY3RvcnkoaHR0cDogSHR0cENsaWVudCkge1xuICByZXR1cm4gbmV3IFRyYW5zbGF0ZUh0dHBMb2FkZXIoaHR0cCwgJy4vYXNzZXRzL2kxOG4vJywgJy5qc29uJyk7XG59XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgRm9ybXNNb2R1bGUsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICBUcmFuc2xhdGVNb2R1bGUuZm9yUm9vdCh7XG4gICAgICBsb2FkZXI6IHtcbiAgICAgICAgcHJvdmlkZTogVHJhbnNsYXRlTG9hZGVyLFxuICAgICAgICB1c2VGYWN0b3J5OiBIdHRwTG9hZGVyRmFjdG9yeSxcbiAgICAgICAgZGVwczogW0h0dHBDbGllbnRdXG4gICAgICB9XG4gICAgfSksXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1VuaXN5c0FuZ3VsYXJJbnB1dFdyYXBwZXJDb21wb25lbnRdLFxuICBleHBvcnRzOiBbVW5pc3lzQW5ndWxhcklucHV0V3JhcHBlckNvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgVW5pc3lzQW5ndWxhcklucHV0V3JhcHBlck1vZHVsZSB7IH1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0lBT0U7S0FBaUI7O2dCQUxsQixVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7OzsyQ0FKRDtDQVFDOzs7Ozs7QUNSRDtJQWdDRTtRQUxzQixnQkFBVyxHQUFXLEVBQUUsQ0FBQztRQUMzQixjQUFTLEdBQVcsRUFBRSxDQUFDO0tBSzFDOzs7O0lBRUQscURBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFNBQVMsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUU7S0FDOUY7Ozs7O0lBRU0scURBQVE7Ozs7SUFBZixVQUFnQixHQUFHO1FBQ2pCLE9BQU8sT0FBTyxHQUFHLEtBQUssUUFBUSxDQUFDO0tBQ2hDOztnQkF0Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQ0FBa0M7b0JBQzVDLFFBQVEsRUFBRSwweEJBZ0JMO29CQUNMLE1BQU0sRUFBRSxDQUFDLHdPQUF3TyxDQUFDO2lCQUNuUDs7Ozs7OEJBRUUsS0FBSyxTQUFDLGFBQWE7d0JBQ25CLEtBQUssU0FBQyxPQUFPOzhCQUNiLEtBQUssU0FBQyxhQUFhOzRCQUNuQixLQUFLLFNBQUMsV0FBVzs7SUFlcEIseUNBQUM7Q0FBQTs7Ozs7O0FDM0NEOzs7O0FBUUEsU0FBZ0IsaUJBQWlCLENBQUMsSUFBZ0I7SUFDaEQsT0FBTyxJQUFJLG1CQUFtQixDQUFDLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxPQUFPLENBQUMsQ0FBQztDQUNqRTtBQUVEO0lBQUE7S0FnQmdEOztnQkFoQi9DLFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixXQUFXO3dCQUNYLG1CQUFtQjt3QkFDbkIsZUFBZSxDQUFDLE9BQU8sQ0FBQzs0QkFDdEIsTUFBTSxFQUFFO2dDQUNOLE9BQU8sRUFBRSxlQUFlO2dDQUN4QixVQUFVLEVBQUUsaUJBQWlCO2dDQUM3QixJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUM7NkJBQ25CO3lCQUNGLENBQUM7cUJBQ0g7b0JBQ0QsWUFBWSxFQUFFLENBQUMsa0NBQWtDLENBQUM7b0JBQ2xELE9BQU8sRUFBRSxDQUFDLGtDQUFrQyxDQUFDO2lCQUM5Qzs7SUFDOEMsc0NBQUM7Q0FBQTs7Ozs7Ozs7Ozs7Ozs7In0=