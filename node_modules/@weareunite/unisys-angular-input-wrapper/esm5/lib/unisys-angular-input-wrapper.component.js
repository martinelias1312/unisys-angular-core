/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { FormGroup } from "@angular/forms";
var UnisysAngularInputWrapperComponent = /** @class */ (function () {
    function UnisysAngularInputWrapperComponent() {
        this.customClass = '';
        this.fieldName = '';
    }
    /**
     * @return {?}
     */
    UnisysAngularInputWrapperComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.fieldName != '' ? this.field = this.group.controls[this.fieldName] : this.field = null;
    };
    /**
     * @param {?} val
     * @return {?}
     */
    UnisysAngularInputWrapperComponent.prototype.isString = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        return typeof val === 'string';
    };
    UnisysAngularInputWrapperComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-unisys-angular-input-wrapper',
                    template: "<div class=\"form-group\" [formGroup]=\"group\" [ngClass]=\"customClass != '' && customClass\">\n    <label class=\"center-block\"> <span translate>{{ translation}}</span>\n        <ng-content></ng-content>\n    </label>\n    <ul *ngIf=\"fieldName\">\n        <li *ngFor=\"let item of field.errors | keyvalue\">\n            <span class=\"text-red\" style=\"font-size: 11px;font-weight: 700;\" translate>{{ item.key}}</span> <span *ngIf=\"isString(item.value)\" translate> {{ item.value}}</span>\n            <span *ngIf=\"!isString(item.value)\">\n          <ul>\n            <li *ngFor=\"let subitem of item.value | keyvalue\">\n              <span translate>{{ subitem.key}}</span> : {{ subitem.value}}\n            </li>\n          </ul>\n        </span>\n        </li>\n    </ul>\n</div>",
                    styles: ["label>span{font-weight:500;font-size:12px}.form-control.ng-invalid{border-color:#dd4b39}.form-control.ng-valid{border-color:#c3dccd}ul{padding-left:0;list-style:none}ul li ul{padding-left:5px}.error{font-size:11px;font-weight:700}"]
                },] },
    ];
    /** @nocollapse */
    UnisysAngularInputWrapperComponent.ctorParameters = function () { return []; };
    UnisysAngularInputWrapperComponent.propDecorators = {
        translation: [{ type: Input, args: ['translation',] }],
        group: [{ type: Input, args: ['group',] }],
        customClass: [{ type: Input, args: ['customClass',] }],
        fieldName: [{ type: Input, args: ['fieldName',] }]
    };
    return UnisysAngularInputWrapperComponent;
}());
export { UnisysAngularInputWrapperComponent };
if (false) {
    /** @type {?} */
    UnisysAngularInputWrapperComponent.prototype.translation;
    /** @type {?} */
    UnisysAngularInputWrapperComponent.prototype.group;
    /** @type {?} */
    UnisysAngularInputWrapperComponent.prototype.customClass;
    /** @type {?} */
    UnisysAngularInputWrapperComponent.prototype.fieldName;
    /** @type {?} */
    UnisysAngularInputWrapperComponent.prototype.field;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pc3lzLWFuZ3VsYXItaW5wdXQtd3JhcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ad2VhcmV1bml0ZS91bmlzeXMtYW5ndWxhci1pbnB1dC13cmFwcGVyLyIsInNvdXJjZXMiOlsibGliL3VuaXN5cy1hbmd1bGFyLWlucHV0LXdyYXBwZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFM0M7SUE2QkU7UUFMc0IsZ0JBQVcsR0FBVyxFQUFFLENBQUM7UUFDM0IsY0FBUyxHQUFXLEVBQUUsQ0FBQztJQUszQyxDQUFDOzs7O0lBRUQscURBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBRTtJQUMvRixDQUFDOzs7OztJQUVNLHFEQUFROzs7O0lBQWYsVUFBZ0IsR0FBRztRQUNqQixPQUFPLE9BQU8sR0FBRyxLQUFLLFFBQVEsQ0FBQztJQUNqQyxDQUFDOztnQkF0Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQ0FBa0M7b0JBQzVDLFFBQVEsRUFBRSwweEJBZ0JMO29CQUNMLE1BQU0sRUFBRSxDQUFDLHdPQUF3TyxDQUFDO2lCQUNuUDs7Ozs7OEJBRUUsS0FBSyxTQUFDLGFBQWE7d0JBQ25CLEtBQUssU0FBQyxPQUFPOzhCQUNiLEtBQUssU0FBQyxhQUFhOzRCQUNuQixLQUFLLFNBQUMsV0FBVzs7SUFlcEIseUNBQUM7Q0FBQSxBQXhDRCxJQXdDQztTQW5CWSxrQ0FBa0M7OztJQUM3Qyx5REFBa0M7O0lBQ2xDLG1EQUFpQzs7SUFDakMseURBQStDOztJQUMvQyx1REFBMkM7O0lBRTNDLG1EQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLXVuaXN5cy1hbmd1bGFyLWlucHV0LXdyYXBwZXInLFxuICB0ZW1wbGF0ZTogYDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCIgW2Zvcm1Hcm91cF09XCJncm91cFwiIFtuZ0NsYXNzXT1cImN1c3RvbUNsYXNzICE9ICcnICYmIGN1c3RvbUNsYXNzXCI+XG4gICAgPGxhYmVsIGNsYXNzPVwiY2VudGVyLWJsb2NrXCI+IDxzcGFuIHRyYW5zbGF0ZT57eyB0cmFuc2xhdGlvbn19PC9zcGFuPlxuICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgPC9sYWJlbD5cbiAgICA8dWwgKm5nSWY9XCJmaWVsZE5hbWVcIj5cbiAgICAgICAgPGxpICpuZ0Zvcj1cImxldCBpdGVtIG9mIGZpZWxkLmVycm9ycyB8IGtleXZhbHVlXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtcmVkXCIgc3R5bGU9XCJmb250LXNpemU6IDExcHg7Zm9udC13ZWlnaHQ6IDcwMDtcIiB0cmFuc2xhdGU+e3sgaXRlbS5rZXl9fTwvc3Bhbj4gPHNwYW4gKm5nSWY9XCJpc1N0cmluZyhpdGVtLnZhbHVlKVwiIHRyYW5zbGF0ZT4ge3sgaXRlbS52YWx1ZX19PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gKm5nSWY9XCIhaXNTdHJpbmcoaXRlbS52YWx1ZSlcIj5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgKm5nRm9yPVwibGV0IHN1Yml0ZW0gb2YgaXRlbS52YWx1ZSB8IGtleXZhbHVlXCI+XG4gICAgICAgICAgICAgIDxzcGFuIHRyYW5zbGF0ZT57eyBzdWJpdGVtLmtleX19PC9zcGFuPiA6IHt7IHN1Yml0ZW0udmFsdWV9fVxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICA8L3VsPlxuICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvbGk+XG4gICAgPC91bD5cbjwvZGl2PmAsXG4gIHN0eWxlczogW2BsYWJlbD5zcGFue2ZvbnQtd2VpZ2h0OjUwMDtmb250LXNpemU6MTJweH0uZm9ybS1jb250cm9sLm5nLWludmFsaWR7Ym9yZGVyLWNvbG9yOiNkZDRiMzl9LmZvcm0tY29udHJvbC5uZy12YWxpZHtib3JkZXItY29sb3I6I2MzZGNjZH11bHtwYWRkaW5nLWxlZnQ6MDtsaXN0LXN0eWxlOm5vbmV9dWwgbGkgdWx7cGFkZGluZy1sZWZ0OjVweH0uZXJyb3J7Zm9udC1zaXplOjExcHg7Zm9udC13ZWlnaHQ6NzAwfWBdXG59KVxuZXhwb3J0IGNsYXNzIFVuaXN5c0FuZ3VsYXJJbnB1dFdyYXBwZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoJ3RyYW5zbGF0aW9uJykgdHJhbnNsYXRpb247XG4gIEBJbnB1dCgnZ3JvdXAnKSBncm91cDogRm9ybUdyb3VwO1xuICBASW5wdXQoJ2N1c3RvbUNsYXNzJykgY3VzdG9tQ2xhc3M6IHN0cmluZyA9ICcnO1xuICBASW5wdXQoJ2ZpZWxkTmFtZScpIGZpZWxkTmFtZTogc3RyaW5nID0gJyc7XG5cbiAgcHVibGljIGZpZWxkO1xuXG4gIGNvbnN0cnVjdG9yKCl7XG4gIH1cblxuICBuZ09uSW5pdCgpe1xuICAgIHRoaXMuZmllbGROYW1lICE9ICcnID8gdGhpcy5maWVsZCA9IHRoaXMuZ3JvdXAuY29udHJvbHNbdGhpcy5maWVsZE5hbWVdIDogdGhpcy5maWVsZCA9IG51bGwgO1xuICB9XG5cbiAgcHVibGljIGlzU3RyaW5nKHZhbCl7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnO1xuICB9XG5cbn1cbiJdfQ==